Mappings: 
  RegionMap: 
    eu-west-1: 
      "HVM64": "ami-06ce3edf0cff21f07"
    us-west-2: 
      "HVM64": "ami-0d6621c01e8c2de2c"
    us-east-1: 
      "HVM64": "ami-0323c3dd2da7fb37d"

Resources:
  QuicksightLabBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "quicksight-lab-data-lake-${AWS::Region}-${AWS::AccountId}"
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
    DeletionPolicy: Retain

  AthenaResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "quicksight-lab-athena-results-${AWS::Region}-${AWS::AccountId}"
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
    DeletionPolicy: Retain

  EC2toS3Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "quicksight-lab-EC2toS3Role-${AWS::Region}-${AWS::AccountId}"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /

  EC2AthenaSettingsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "quicksight-lab-AthenaPolicy${AWS::Region}-${AWS::AccountId}"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'athena:*'
            Resource: '*'
      Roles:
        - !Ref EC2toS3Role

  EC2StartCrawlerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "quicksight-lab-GlueCrawlerPolicy-${AWS::Region}-${AWS::AccountId}"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'glue:*'
            Resource:
              Fn::Join:
              - ""
              - 
                - "arn:aws:glue:"
                - !Ref 'AWS::Region'
                - ":"
                - !Ref 'AWS::AccountId'
                - ":crawler/"
                - !Ref SportTicketsDatabaseCrawler
      Roles:
        - !Ref EC2toS3Role

  DataLakeS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "quicksight-lab-S3Policy-${AWS::Region}-${AWS::AccountId}"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 's3:*'
            Resource: 
              Fn::Join:
              - ""
              - 
                - !GetAtt QuicksightLabBucket.Arn
                - "/*"
      Roles:
        - !Ref EC2toS3Role
        - !Ref SportTicketsDatabaseCrawlerRole

  EC2toS3PolicyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EC2toS3Role

  DataLakeLoaderEC2:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref EC2toS3PolicyInstanceProfile
      DisableApiTermination: false
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: t3.2xlarge
      Monitoring: true
      UserData: !Base64
        Fn::Sub:
        - |
          #!/bin/bash -ex
          yum update -y
          yum install -y git
          cd /home/ec2-user
          git clone https://github.com/jbernalvallejo/amazon-quicksight-lab-data-sample.git
          cd amazon-quicksight-lab-data-sample/parquet/sampledb/v1
          aws s3 cp . s3://${BucketName}/${GlueDatabase}/parquet --recursive
          export AWS_DEFAULT_REGION=${AWS::Region}
          aws glue start-crawler --name ${CrawlerName}
        -
          BucketName: !Ref QuicksightLabBucket
          GlueDatabase: !Ref SportTicketsDatabase
          CrawlerName: !Ref SportTicketsDatabaseCrawler
          AthenaBucket: !Sub
            - s3://${AthenaBucketName}/
            - { AthenaBucketName: !Ref AthenaResultsBucket } 
    DependsOn: SportTicketsDatabaseCrawler
        
  SportTicketsDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: ticketdata
        Description: Database to hold tables for sport ticket data

  SportTicketsDatabaseCrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "quicksight-lab-GlueCrawlerRole-${AWS::Region}-${AWS::AccountId}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: glue.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole

  SportTicketsDatabaseCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: quicksight-lab-parquet-crawler    
      DatabaseName: !Ref SportTicketsDatabase
      TablePrefix: parquet_
      Role: !GetAtt SportTicketsDatabaseCrawlerRole.Arn
      Targets:
        S3Targets:
          - Path: !Ref QuicksightLabBucket
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"


Outputs:
  AthenaResultsBucket:
    Description: S3 bucket to configure in Athena Settings to store query results
    Value: !Sub
      - s3://${BucketName}/
      - { BucketName: !Ref AthenaResultsBucket }